// This file was auto-generated by ML.NET Model Builder. 

using Microsoft.ML;
using System;
using System.IO;
using System.Reflection;

namespace MLApplications.SentimentAnalysis
{
    public class ConsumeModel
    {
        private Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictionEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(CreatePredictionEngine);

        // For more info on consuming ML.NET models, visit https://aka.ms/mlnet-consume
        // Method for consuming model in your app
        public ModelOutput Predict(ModelInput input)
        {
            ModelOutput result = PredictionEngine.Value.Predict(input);
            return result;
        }

        public static PredictionEngine<ModelInput, ModelOutput> CreatePredictionEngine()
        {
            // Create new MLContext
            MLContext mlContext = new MLContext();

            // Load model & create prediction engine
            // Have to build the path: https://stackoverflow.com/questions/25419694/get-relative-file-path-in-a-class-library-project-that-is-being-referenced-by-a
            var buildDir = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location);
            
            string modelPath = @$"{buildDir}\MLModel.zip";
            ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);
            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);

            return predEngine;
        }
    }
}
